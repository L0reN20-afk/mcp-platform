// GET method per verificare se un device è già registrato (senza registrare)
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const deviceFingerprint = searchParams.get('device_fingerprint')
    
    // DEBUG: Se richiesto senza parametri, restituisci status delle env vars
    if (!deviceFingerprint) {
      return NextResponse.json({
        success: true,
        debug: true,
        env_status: {
          supabase_url_exists: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
          supabase_key_exists: !!process.env.SUPABASE_SERVICE_KEY,
          supabase_url_length: process.env.NEXT_PUBLIC_SUPABASE_URL?.length || 0,
          supabase_key_length: process.env.SUPABASE_SERVICE_KEY?.length || 0
        }
      })
    }

    const existingTrial = await DatabaseService.getDeviceTrial(deviceFingerprint)
    
    return NextResponse.json({
      success: true,
      device_exists: !!existingTrial,
      trial_info: existingTrial ? {
        status: existingTrial.status,
        trial_expires: existingTrial.trial_expires,
        created_at: existingTrial.created_at
      } : null
    })

  } catch (error) {
    console.error('Error checking device:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Errore nella verifica del device',
      debug_error: error instanceof Error ? error.message : String(error)
    }, { status: 500 })
  }
}